#include <Arduino.h>
String inputString = "";         // a String to hold incoming data
String undato = "";
bool stringComplete = false;  // whether the string is complete
float ledX = 2; float ledY = 3;
int Z_STEP = 18;
int Z_DIR = 19;
int Y_STEP = 16;
int Y_DIR = 17;
int X_STEP = 14;
int X_DIR = 15;
float datoX = 0; float datoY = 0; //-----------------------------datos nuevos en X y en Y
float datoViejoX = 0; float datoViejoY = 0; //-------------------datos viejos en X y en Y, heredados siempre de "datoX y datoY"
float deltaX = 0; float deltaY = 0;//-------------------------valores absolutos en X y Y
float larga = 0;//------------------------------------------toma el valor de la coordenada mas LARGA en el plano cartesiano
float corta = 0;//------------------------------------------toma el valor de la coordenada mas CORTA en el plano cartesiano
float avanceCorto = 0;//---------------------------------resultado de dividir "larga/corta" declaradas en la lineas superiores
float acumCorto = 0;//-----------------------------------acumula la variable "avanceCorto" declarada en la linea superior
float comparador = 0;//----------------------------------se va a comparar con "avanceCorto" declarado en linea 10
int contadorPruebaX = 0;
int contadorPruebaY = 0;
void setup() {
  Serial.begin(9600);
  
  inputString.reserve(200);
  pinMode(ledX, OUTPUT);
  pinMode(ledY, OUTPUT);
  pinMode(X_STEP, OUTPUT);
  pinMode(X_DIR, OUTPUT);
  pinMode(Y_STEP, OUTPUT);
  pinMode(Y_DIR, OUTPUT);
  pinMode(Z_STEP, OUTPUT);
  pinMode(Z_DIR, OUTPUT);
}

void loop() {
  // print the string when a newline arrives:
  if (stringComplete) {
    //Serial.println(undato);
    // clear the string:
    inputString = "";
    stringComplete = false;
  }
}

void moverZ(){
  for(int t = 0; t < 50; t++){
      digitalWrite(Z_STEP, HIGH);
      delay(10);
      digitalWrite(Z_STEP, LOW);
      delay(10);
    }
}

void mover() {
  int deltaX = abs(datoX - datoViejoX);
  int deltaY = abs(datoY - datoViejoY);
/////////////////////////////////////DETERMINAR SI VA A IZQUIERDA O DERECHA
  if((datoX - datoViejoX) > 0){
    //se mueve hacia la derecha
    digitalWrite(X_DIR, HIGH);
  }
  else if((datoX - datoViejoX) < 0){
    //se mueve hacia la izquierda
    digitalWrite(X_DIR, LOW);
  }
  else{
    //se queda alli y solo se mueve en el eje de las Y
  }
/////////////////////////////////////DETERMINAR SI VA A ARRIBA O ABAJO
  if((datoY - datoViejoY) > 0){
    //se mueve hacia arriba
    digitalWrite(Y_DIR, HIGH);
  }
  else if((datoY - datoViejoY) < 0){
    //se mueve hacia abajo
    digitalWrite(Y_DIR, LOW);
  }
  else{
    //se queda alli y solo se mueve en el eje de las X
  }

  if (deltaX > deltaY) ///EL DESPLAZAMIENTO ES MAYOR EN EL EJE "X"
  {
    if (deltaY > 0)
    {
      avanceCorto = (float)deltaX / (float)deltaY; //Serial.println(avanceCorto); 
    }
    for (int t = 0; t < deltaX; t++) //-------------------------------se recorre el "deltaX" por ser la coordenada mas larga en el plano cartesiano
    {
      ///////////////////////////////////////////////// PASO EN X
      digitalWrite(X_STEP, HIGH);
      delay(10);
      digitalWrite(X_STEP, LOW);
      contadorPruebaX++;
      if (deltaY > 0)
      {
        if (t >= acumCorto)
        {
          ///////////////////////////////////////////////// PASO EN Y
          digitalWrite(Y_STEP, HIGH);
          delay(10);
          digitalWrite(Y_STEP, LOW);

          acumCorto += avanceCorto;
          contadorPruebaY++;
        }
        else
        {
          delay(10);
        }
      }
    }
    Serial.println((String)contadorPruebaX + "    " + (String)contadorPruebaY);//esto mas adelante se debe comentar
    contadorPruebaX = contadorPruebaY = 0;///////////////////////////////////////esto mas adelante se debe comentar
    acumCorto = avanceCorto = 0;
  }
  else if (deltaY > deltaX) ///EL DESPLAZAMIENTO ES MAYOR EN EL EJE "Y"
  {
    if (deltaX > 0)
    {
      avanceCorto = (float)deltaY / (float)deltaX;
    }
    for (int t = 0; t < deltaY; t++) //-------------------------------se recorre el "deltaY" por ser la coordenada mas larga en el plano cartesiano
    {
      ///////////////////////////////////////////////// PASO EN Y
      digitalWrite(Y_STEP, HIGH);
      delay(10);
      digitalWrite(Y_STEP, LOW);
      
      contadorPruebaY++;
      if (deltaX > 0)
      {
        if (t >= acumCorto)
        {
          ///////////////////////////////////////////////// PASO EN X
          digitalWrite(X_STEP, HIGH);
          delay(10);
          digitalWrite(X_STEP, LOW);
          
          acumCorto += avanceCorto;
          contadorPruebaX++;
        }
        else
        {
          delay(10);
        }
      }
    }
    Serial.println((String)contadorPruebaX + "    " + (String)contadorPruebaY);//esto mas adelante se debe comentar
    contadorPruebaX = contadorPruebaY = 0;///////////////////////////////////////esto mas adelante se debe comentar
    acumCorto = avanceCorto = 0;
  }
  else ///EL DESPLAZAMIENTO ES EL MISMO EN AMBOS EJES
  {
    for (int t = 0; t < deltaY; t++) //-------------------------------se recorre cualquier "delta" porque ambos iguales, en este caso se recorre el "Y"
    {
      contadorPruebaX++;
      contadorPruebaY++;
    }
    Serial.println((String)contadorPruebaX + "    " + (String)contadorPruebaY);
    contadorPruebaX = contadorPruebaY = 0;/////////////////////////////////////esto mas adelante se debe comentar
  }


  datoViejoX = datoX;
  datoViejoY = datoY;

  Serial.print("S");
}


void serialEvent() {
  while (Serial.available()) {
    char inChar = (char)Serial.read();

    if (inChar != 'x' && inChar != 'y' && inChar != 's' && inChar != 'b')
    {
      inputString += inChar;
    }
    else if (inChar == 'x')
    {
      datoX = inputString.toInt();
      //Serial.println(datoX);
      inputString = "";
    }
    else if (inChar == 'y')
    {
      datoY = inputString.toInt();
      //Serial.println((String)datoX + "    " + (String)datoY);
      mover(); 
      undato = inputString;
      stringComplete = true;
    }
    else if (inChar == 's')
    {
      //datoSolicitud = "S";
      digitalWrite(Z_DIR, LOW); ////////////////////////////////// Eje Z en una direccion
      moverZ();
      stringComplete = true;
    }
    else if (inChar == 'b')     
    {
      //datoSolicitud = "B";
      digitalWrite(Z_DIR, HIGH); ////////////////////////////////// Eje Z en la otra direccion
      moverZ();
      digitalWrite(Z_DIR, LOW);
      stringComplete = true;
    }
  }
}
