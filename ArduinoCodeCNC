#include <Arduino.h>
String inputString = "";         // a String to hold incoming data
String undato = "";
String movimiento = "";
bool stringComplete = false;  // whether the string is complete
int Z_STEP = 18;
int Z_DIR = 19;
int Y_STEP = 16;
int Y_DIR = 17;
int X_STEP = 14;
int X_DIR = 15;
int Motores_ON_OFF = 13;
float datoX = 0.0; float datoY = 0.0; //-----------------------------datos nuevos en X y en Y
float datoViejoX = 0.0; float datoViejoY = 0.0; //-------------------datos viejos en X y en Y, heredados siempre de "datoX y datoY"
float deltaX = 0; float deltaY = 0;//-------------------------valores absolutos en X y Y
float avanceCorto = 0.0;//---------------------------------resultado de dividir "larga/corta" declaradas en la lineas superiores
float acumCorto = 0.0;//-----------------------------------acumula la variable "avanceCorto" declarada en la linea superior
float comparador = 0.0;//----------------------------------se va a comparar con "avanceCorto" declarado en linea 10
//COMENTABLE
int contX = 0;
int contY = 0;
//COMENTABLE
void setup() {
  Serial.begin(9600);
  
  inputString.reserve(200);
  // pinMode(ledX, OUTPUT);
  // pinMode(ledY, OUTPUT);
  pinMode(X_STEP, OUTPUT);
  pinMode(X_DIR, OUTPUT);
  pinMode(Y_STEP, OUTPUT);
  pinMode(Y_DIR, OUTPUT);
  pinMode(Z_STEP, OUTPUT);
  pinMode(Z_DIR, OUTPUT);
  pinMode(Motores_ON_OFF, OUTPUT);
}

void loop() {
  // print the string when a newline arrives:
  if (stringComplete) {
    inputString = "";
    stringComplete = false;
  }
}

void moverZ(){
  for(int t = 0; t < 50; t++){
      digitalWrite(Z_STEP, HIGH);
      delay(5);
      digitalWrite(Z_STEP, LOW);
      delay(5); 
    }
    Serial.print("S");
}

void mover() {
  int deltaX = abs(datoX - datoViejoX);
  int deltaY = abs(datoY - datoViejoY);
/////////////////////////////////////DETERMINAR SI VA A IZQUIERDA O DERECHA
  if((datoX - datoViejoX) > 0){ digitalWrite(X_DIR, HIGH); }
  else if((datoX - datoViejoX) < 0){ digitalWrite(X_DIR, LOW); }
  else{ }
/////////////////////////////////////DETERMINAR SI VA A ARRIBA O ABAJO
  if((datoY - datoViejoY) > 0) { digitalWrite(Y_DIR, HIGH); }
  else if((datoY - datoViejoY) < 0) { digitalWrite(Y_DIR, LOW); }
  else{ }

  if (deltaX > deltaY) ///EL DESPLAZAMIENTO ES MAYOR EN EL EJE "X"
  {
    if (deltaY > 0)
    {
      avanceCorto = (float)deltaX / (float)deltaY; //Serial.println(avanceCorto); 
    }
    for (int t = 0; t < deltaX; t++) //-------------se recorre el "deltaX" por ser la coordenada mas larga en el plano
    {
      //////////////////////////////////// PASO EN X
      digitalWrite(X_STEP, HIGH);
      delay(5);
      digitalWrite(X_STEP, LOW);
      //contX++;////////////////////////////////////////////////////////////////////////COMENTABLE
      if (deltaY > 0)
      {
        if (t >= acumCorto)
        {
          /////////////////////////////// PASO EN Y
          digitalWrite(Y_STEP, HIGH);
          delay(5);
          digitalWrite(Y_STEP, LOW);
          //contY++;////////////////////////////////////////////////////////////////////////COMENTABLE
          acumCorto += avanceCorto;
        }
        else
        {
          delay(5);
        } 
      }
    }
    acumCorto = avanceCorto = 0.0;
  }
  else if (deltaY > deltaX) ///EL DESPLAZAMIENTO ES MAYOR EN EL EJE "Y"
  {
    if (deltaX > 0)
    {
      avanceCorto = (float)deltaY / (float)deltaX;
    }
    for (int t = 0; t < deltaY; t++) //--------------se recorre el "deltaY" por ser la coordenada mas larga en el plano cartesiano
    {
      ///////////////////////////////////////////////// PASO EN Y
      digitalWrite(Y_STEP, HIGH);
      delay(5);
      digitalWrite(Y_STEP, LOW);
      //contY++;////////////////////////////////////////////////////////////////////////COMENTABLE
      if (deltaX > 0)
      {
        if (t >= acumCorto)
        {
          ///////////////////////////////////////////////// PASO EN X
          digitalWrite(X_STEP, HIGH);
          delay(5);
          digitalWrite(X_STEP, LOW);
          //contX++;////////////////////////////////////////////////////////////////////////COMENTABLE
          acumCorto += avanceCorto;
        }
        else
        {
          delay(5);
        }
      }
    }
    acumCorto = avanceCorto = 0.0;
  }
  else ///EL DESPLAZAMIENTO ES EL MISMO EN AMBOS EJES
  {
    for (int t = 0; t < deltaY; t++) //-------------------------------se recorre cualquier "delta" porque ambos iguales, en este caso se recorre el "Y"
    {
        digitalWrite(X_STEP, HIGH);
        digitalWrite(Y_STEP, HIGH);
        delay(5);
        digitalWrite(X_STEP, LOW);
        digitalWrite(Y_STEP, LOW);
        // contX++;
        // contY++;
    }
  }

  datoViejoX = datoX;
  datoViejoY = datoY;
  //Serial.print("X" + (String)contX + " Y" + (String)contY);//COMENTABLE
  //contX = contY = 0; ////////////////////////////////////////COMENTABLE
  Serial.print("S");
}


void serialEvent() {
  while (Serial.available()) {
    char inChar = (char)Serial.read();

    if (inChar != 'x' && inChar != 'y' && inChar != 's' && inChar != 'b' && inChar != 'D' && inChar != 'F' && inChar != 'R')
    {
      inputString += inChar;
    }
    else if (inChar == 'x')
    {
      datoX = inputString.toFloat();
      inputString = "";
    }
    else if (inChar == 'y')
    {
      datoY = inputString.toFloat();
      mover(); 
      undato = inputString;
      stringComplete = true;
    }
    else if (inChar == 's')
    {
      //datoSolicitud = "S";
      digitalWrite(Z_DIR, LOW); ////////////////////////////////// Eje Z en una direccion
      moverZ();
      stringComplete = true;
    }
    else if (inChar == 'b')     
    {
      //datoSolicitud = "B";
      digitalWrite(Z_DIR, HIGH); ////////////////////////////////// Eje Z en la otra direccion
      moverZ();
      digitalWrite(Z_DIR, LOW);
      stringComplete = true;
    }
    else if(inChar == 'D')
    {
      stringComplete = true;
      Serial.print("S");
    }
    else if(inChar == 'F')
    {
     datoX = datoY =  datoViejoX = datoViejoY = avanceCorto = acumCorto = comparador = 0.0;
     deltaX = deltaY = 0;
      digitalWrite(X_DIR, LOW);
      digitalWrite(Y_DIR, LOW);
      digitalWrite(Motores_ON_OFF, LOW);
    }
    else if(inChar == 'R'){ ///////// Encender alimentaciÃ³n a motores
      digitalWrite(Motores_ON_OFF, HIGH);
    }
  }
}
